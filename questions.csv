#,Question,Category,Level,Tags,Time,Answer Choices,IsAnswer
0,"What is printed to console log?

var queue = function (items) {
    var results = [];
    var doit = function () {
        if (items.length) {
            var i = items.pop();
            results.push(i());
            setTimeout(doit, 10);
        }
        return results;
    };
    return doit;
};
var q = queue([() => 1, () => 3]);
console.log(q());",Practical,Advanced,JavaScript,2 Minutes,[ 3 ],Y
,,,,,,"[ 1 ,3 ]",N
,,,,,,[ 1 ],N
,,,,,,error is thrown,N
1,"What is printed by console.log?

var queue = function (items) {
    var results = [];
    var doit = function () {
        if (items.length) {
            var i = items.pop();
            results.push(i());
            setTimeout(doit, 10);
        }
        return results
    };
    return doit;
};
var q = queue([() => 1, () => 3]);
var results = q();
setTimeout(function () {
    console.log(results);
}, 1000);",Practical,Advanced,JavaScript,2 Minutes,"[ 3, 1 ]",Y
,,,,,,[ 3 ],N
,,,,,,[ 1 ],N
,,,,,,"[ 1, 3 ]",N
2,"What is printed to console.log?

var circular = function* () {
    var i = 0;
    while (true) {
        yield i++ % 10;
    }
};
var c = circular();
for (var i = 0; i < 12; i++) {
    c.next();
}
console.log(c.next().value, c.next().value);",Practical,Advanced,"JavaScript, ECMAScript 6",2 Minutes,2 3,Y
,,,,,,0 1,N
,,,,,,1 2,N
,,,,,,3 4,N
3,"What is printed to console.log?

var circular = function* () {
    var i = 0;
    while (true) {
        yield i++ % 2;
    }
};
var c = circular();
for (var i = 0; i < 12; i++) {
    c.next();
}
var finalValue = c.next();
console.log(finalValue.value, finalValue.done);",Practical,Advanced,JavaScript,2 Minutes,0 false,Y
,,,,,,1 false,N
,,,,,,0 true,N
,,,,,,1 true,N
4,"What is printed to console.log?

var circular = function* () {
    var i = 0;
    while (true) {
        yield i % 5;
        i++;
    }
};
var items = [0, 1, 2, 3, 4];
for (i of circular()) {
    if (items[i] === i) {
        items[i] = ""boo"";
    } else {
        break;
    }
}
console.log(items);",Practical,Advanced,JavaScript,5 Minutes,"['boo', 'boo', 'boo', 'boo', 'boo']",Y
,,,,,,"[0, 1, 2, 3, 4]",N
,,,,,,"[1, 2, 3, 4, 5]",N
,,,,,,"['boo', 1, 2, 3, 4]",N
5,"What is printed to console.log?

var genGen = function(i) {
    return function* () {
        while (true) {
            yield i;
        }
    };
};
var g = genGen(5)();
for (let i of g) {
    if (i % 2) {
        break;
    } else {
        continue;
    }
}
console.log(g.next().done);",Practical,Advanced,JavaScript,2 Minutes,false,Y
,,,,,,true,N
,,,,,,undefined,N
6,"What is printed to console.log?

var gen = function* () {
    yield 1;
    yield* function* () {
        yield 2;
    };
};

var it = gen();
var val = it.next();
console.log(val.value, val.done);",Practical,Advanced,JavaScript,2 Minutes,1 false,Y
,,,,,,2 true,N
,,,,,,1 true,N
,,,,,,2 false,N
7,"What is printed to console.log?

Promise.race([Promise.resolve(1), Promise.reject(2)]).then(function (val) {
    console.log(val);
});",Practical,Advanced,"JavaScript, ECMAScript 6",2 Minutes,1,Y
,,,,,,2,N
,,,,,,"1, 2",N
,,,,,,udnefined,N
8,"What is printed to console.log?

Promise.race([new Promise(function (resolve, reject) {
    if (Math.random() < 0.5) {
        resolve(1);
    } else {
        reject(3);
    }
}), Promise.reject(2)]).then(function (val) {
    console.log(val);
}).catch(function (val) {
    console.log(val);
});",Practical,Advanced,"JavaScript, ECMAScript 6",2 Minutes,1 or 3,Y
,,,,,,2,N
,,,,,,1,N
,,,,,,udnefined,N
9,"What is printed to console.log?

Promise.race([new Promise(function (resolve, reject) {
    setTimeout(function () {
        resolve(10);
    }, 100);
}), new Promise(function (resolve, reject) {
    setTimeout(function () {
        resolve(42);
    }, 10);
})]).then(function (val) {
    console.log(val);
}).catch(function (val) {
    console.log(val);
});",Practical,Advanced,"JavaScript, ECMAScript 6",2 Minutes,42,Y
,,,,,,10,N
,,,,,,100,N
,,,,,,udnefined,N
10,"What gets printed to console.log?

var mel = function(i) {
    return function (j) {
        i--;
        return i - j;
    };
};
var b = mel(20);
console.log(b(), b(1), b(3));",Practical,Advanced,JavaScript,2 Minutes,NaN 17 14,Y
,,,,,,18 17 14,N
,,,,,,undefined 17 14,N
11,"What gets printed to console.log?

var mel = (function(i) {
    return function (j) {
        i--;
        return i - j;
    };
})(20);
console.log(mel(1), mel(2), mel(3));",Practical,Advanced,JavaScript,2 Minutes,18 16 14,Y
,,,,,,18 17 16,N
,,,,,,undefined 16 14,N
,,,,,,undefined undefined unddefined,N
12,"What is printed to console.log?

var f = function () {
    return function () {
        var i = Array.prototype.slice.call(arguments).reduce((p, n) => p + n, 0);
        return function (i) {
            return i * 10;
        }
    }
}
console.log(f()(3)(10));",Practical,Advanced,JavaScript,2 Minutes,100,Y
,,,,,,60,N
,,,,,,30,N
,,,,,,6,N
13,"What is printed to console.log?

var f = function () {
    return function () {
        var i = Array.prototype.slice.call(arguments).reduce((p, n) => p + n, 0);
        return function () {
            return i * 10;
        }
    }
}
console.log(f()(3)(10));",Practical,Advanced,JavaScript,2 Minutes,30,Y
,,,,,,100,N
,,,,,,60,N
,,,,,,6,N
14,"What is printed to console.log?

var three = function () {
    return function () {
        if (arguments.length === 3) {
            return Array.prototype.slice.call(arguments).reduce((p, n) => p + n, 0);
        } else {
            return null;
        }
    }
};
console.log(three()(1, 2, 3), three()(1, 2));",Practical,Advanced,JavaScript,2 Minutes,6 null,Y
,,,,,,3 null,N
,,,,,,6 undefined,N
,,,,,,3 undefined,N
15,"What is printed to console.log?

var three = function () {
    return function () {
        if (arguments.length === 3) {
            Array.prototype.slice.call(arguments).reduce((p, n) => p + n, 0);
        } else {
            42;
        }
    }
};
console.log(three()(1, 2, 3), three()(1, 2));",Practical,Advanced,JavaScript,2 Minutes,undefined undefined,Y
,,,,,,6 42,N
,,,,,,6 undefined,N
,,,,,,undefined 42,N
16,"What is printed to console.log?

var healthMixin = {
    health: 100,
    heal: function (i) {
        this.health += i || 1;
    }
};

var positionMixin = {
    x: 0,
    y: 0,
    teleport: function (x, y) {
        this.x = x || 0;
        this.y = y || 0;
    },
    move: function(x, y) {
        this.x = this.x + x || 0;
        this.y = this.y + y || 0;
    }
};

var mixer = function() {
    var args = Array.prototype.slice.call(arguments);
    var base = args[0];
    var mixins = args.slice(1);
    mixins.forEach(function (m) {
        for (var p in m) {
            base[p] = m[p];
        }
    });
    return base;
};

var fuzzyMonsterFactory = function () {
    var proto = {
        name: 'Fuzzy',
        health: 10
    };
    return Object.create(proto);
};

var mobileMonsterFactory = function () {
    var m = Object.create(fuzzyMonsterFactory());
    return mixer(m, positionMixin);
};

var goo = mobileMonsterFactory();
goo.teleport(0, 5);
goo.move(10, 10);
console.log(goo.x, goo.y);",Practical,Advanced,JavaScript,5 Minutes,10 15,Y
,,,,,,0 0,N
,,,,,,10 10,N
,,,,,,0 5,N
17,"What is printed to console.log?

var healthMixin = {
    health: 100,
    heal: function (i) {
        this.health += i || 1;
    }
};

var positionMixin = {
    x: 0,
    y: 0,
    teleport: function (x, y) {
        this.x = x || 0;
        this.y = y || 0;
    },
    move: function(x, y) {
        this.x = this.x + x || 0;
        this.y = this.y + y || 0;
    }
};

var mixer = function() {
    var args = Array.prototype.slice.call(arguments);
    var base = args[0];
    var mixins = args.slice(1);
    mixins.forEach(function (m) {
        for (var p in m) {
            base[p] = m[p];
        }
    });
    return base;
};

var fuzzyMonsterFactory = function () {
    var proto = {
        name: 'Fuzzy',
        health: 10
    };
    return Object.create(proto);
};

var mobileMonsterFactory = function () {
    var m = Object.create(fuzzyMonsterFactory());
    return mixer(m, positionMixin, healthMixin);
};

var goo = mobileMonsterFactory();
goo.teleport();
goo.move(10, 10);
goo.heal(10);
console.log(goo.x, goo.y, goo.health);",Practical,Advanced,JavaScript,5 Minutes,10 10 110,Y
,,,,,,10 10 100,N
,,,,,,0 0 100,N
,,,,,,10 10 0,N
18,"What is printed to console.log?

var healthMixin = {
    health: 100,
    heal: function (i) {
        this.health += i || 1;
    }
};

var positionMixin = {
    x: 0,
    y: 0,
    teleport: function (x, y) {
        this.x = x || 0;
        this.y = y || 0;
    },
    move: function(x, y) {
        this.x = this.x + x || 0;
        this.y = this.y + y || 0;
    }
};

var mixer = function() {
    var args = Array.prototype.slice.call(arguments);
    var base = args[0];
    var mixins = args.slice(1);
    mixins.forEach(function (m) {
        for (var p in m) {
            base[p] = m[p];
        }
    });
    return base;
};

var fuzzyMonsterFactory = function () {
    var proto = {
        name: 'Fuzzy',
        health: 10
    };
    return Object.create(proto);
};

var mobileMonsterFactory = function () {
    var m = Object.create(fuzzyMonsterFactory());
    return mixer(m, positionMixin, healthMixin);
};

var goo = mobileMonsterFactory();
var props = [];
for (var p in goo) {
    if (goo.hasOwnProperty(p)) {
        props.push(p);
    }
}
console.log(props);",Practical,Advanced,JavaScript,5 Minutes,"[ 'x', 'y', 'teleport', 'move', 'health', 'heal' ]",Y
,,,,,,"[ 'x', 'y', 'teleport', 'name', 'move', 'health', 'heal' ]",N
,,,,,,"[ 'x', 'y', 'health' ]",N
,,,,,,[ ],N
19,"What is printed to console.log?

var healthMixin = {
    health: 100,
    heal: function (i) {
        this.health += i || 1;
    }
};

var positionMixin = {
    x: 0,
    y: 0,
    teleport: function (x, y) {
        this.x = x || 0;
        this.y = y || 0;
    },
    move: function(x, y) {
        this.x = this.x + x || 0;
        this.y = this.y + y || 0;
    }
};

var mixer = function() {
    var args = Array.prototype.slice.call(arguments);
    var base = args[0];
    var mixins = args.slice(1);
    mixins.forEach(function (m) {
        for (var p in m) {
            base[p] = m[p];
        }
    });
    return base;
};

var fuzzyMonsterFactory = function () {
    var proto = {
        name: 'Fuzzy',
        health: 10
    };
    return Object.create(proto);
};

var mobileMonsterFactory = function () {
    var m = Object.create(fuzzyMonsterFactory());
    return mixer(m, positionMixin, healthMixin);
};

var goo = mobileMonsterFactory();
mixer(goo, {
    z: 0,
    move: function(x, y, z) {
        this.x = this.x + x || 0;
        this.y = this.y + y || 0;
        this.z = this.z + z || 0;
    }
});
goo.move(1, 2);
goo.move(null, 3, 5);
goo.teleport(2, 4);
console.log(goo.x, goo.y, goo.z);",Practical,Advanced,JavaScript,5 Minutes,2 4 5,Y
,,,,,,2 4 0,N
,,,,,,NaN 4 5,N
,,,,,,2 4 undefined,N
20,"What is printed to console.log?

var healthMixin = {
    health: 100,
    heal: function (i) {
        this.health += i || 1;
    }
};

var positionMixin = {
    x: 0,
    y: 0,
    teleport: function (x, y) {
        this.x = x || 0;
        this.y = y || 0;
    },
    move: function(x, y) {
        this.x = this.x + x || 0;
        this.y = this.y + y || 0;
    }
};

var mixer = function() {
    var args = Array.prototype.slice.call(arguments);
    var base = args[0];
    var mixins = args.slice(1);
    mixins.forEach(function (m) {
        for (var p in m) {
            base[p] = m[p];
        }
    });
    return base;
};

var fuzzyMonsterFactory = function () {
    var proto = {
        name: 'Fuzzy',
        health: 10
    };
    return Object.create(proto);
};

var mobileMonsterFactory = function () {
    var m = Object.create(fuzzyMonsterFactory());
    return mixer(m, positionMixin, healthMixin);
};

var goo = mobileMonsterFactory();
var goo2 = fuzzyMonsterFactory();
mixer(goo2, {
    x: goo.x,
    y: goo.y,
    move: function (x, y) {
        this.x += x * 2 || 0;
        this.y += y * 2 || 0;
    }
});
delete goo2.move;
goo2.move(10, 10);
console.log(goo.x, goo.y);",Practical,Advanced,JavaScript,5 Minutes,Error is thrown,Y
,,,,,,10 10,N
,,,,,,20 20,N
,,,,,,0 0,N
21,"What is printed in console.log?

var chainer = function (f) {
    return function () {
        f.call(this);
        return this;
    };
};

var bobby = {
    name: ""Bobby"",
    talk: chainer(function () {
        return this.name;
    })
};
console.log(bobby.talk().toString(), bobby.talk().talk().name);",Practical,Advanced,JavaScript,2 Minutes,[object Object] Bobby,Y
,,,,,,Bobby Bobby,N
,,,,,,undefined Bobby,N
,,,,,,Error is thrown,N
22,"What is printed in console.log?

var chainer = function (f) {
    return function () {
        f.call(this);
        return this;
    };
};

var bobby = {
    name: ""Bobby"",
    talk: chainer(function () {
        return this.name;
    }),
    censor: chainer(function() {
        this.name = ""XXXXX"";
    })
};
var bernie = {
    name: ""Bernie""
};
console.log(bobby.censor.call(bernie).name);",Practical,Advanced,JavaScript,2 Minutes,XXXXX,Y
,,,,,,Bernie,N
,,,,,,Bobby,N
,,,,,,undefined,N
23,"What is printed in console.log?

var chainer = function (f) {
    return function () {
        f.call(this);
        return this;
    };
};

var bobby = {
    name: ""Bobby"",
    talk: chainer(function () {
        return this.name;
    }),
    censor: chainer(function() {
        this.name = ""XXXXX"";
    })
};
var bernie = {
    name: ""Bernie"",
    talk: bobby.talk
};
console.log(bernie.talk().name, bobby.talk().name);",Practical,Advanced,JavaScript,2 Minutes,Bernie Bobby,Y
,,,,,,Bobby Bobby,N
,,,,,,undefined Bobby,N
,,,,,,Bernie Bernie,N
24,"What gets printed to console.log?

var f = (function () {
    f1 = function (a) {
        return a + 2;
    };
    var f1 = function (a) {
        return a + 4;
    };
    return function (a) {
        return f1(a) + 4;
    };
})();
console.log(f(2));",Practical,Advanced,JavaScript,2 Minutes,10,Y
,,,,,,8,N
,,,,,,6,N
,,,,,,Error is thrown,N
25,"What gets printed to console.log?

var f = (function () {
    var f1 = function (a) {
        f1 = a;
    };
    return function (a) {
        f1(a);
        return f1 + 4;
    };
})();
console.log(f(2));",Practical,Advanced,JavaScript,2 Minutes,6,Y
,,,,,,NaN,N
,,,,,,Error is thrown,N
26,"What gets printed to console.log?

var items = [[0, 0], [""0"", 10], [""1"", 10], [1, 100]];
var mapped = new Map(items);
console.log(mapped.size, mapped.get(1), mapped.get(0), mapped.get(""0""));",Practical,Advanced,JavaScript,2 Minutes,4 100 0 10,Y
,,,,,,4 100 10 10,N
,,,,,,undefined 100 0 10,N
,,,,,,undefined 100 10 10,N
27,"What gets printed to console.log?

var items = [[0, 0], [""0"", 10], [""1"", 10], [1, ""100""]];
var mapped = new Map(items);
mapped.forEach((v, k) => mapped.set(k, v+1));
console.log(mapped.get(0), mapped.get(1));",Practical,Advanced,JavaScript,2 Minutes,1 1001,Y
,,,,,,0 1001,N
,,,,,,1 101,N
,,,,,,0 101,N
28,"What gets printed to console.log?

var items = [[0, 0], [""0"", 1], [1, 2], [""1"", 3]];
var mapped = new Map(items);
mapped.forEach((v, k) => mapped.set(k, v+1));
mapped.forEach((v, k) => mapped.set(k, v % 2));
var finalMap = new Map();
mapped.forEach((v, k) => finalMap.set(k, v));
for (let item of mapped) {
    console.log(item);
    break;
}",Practical,Advanced,JavaScript,2 Minutes,"[0, 1]",Y
,,,,,,"[1, 0]",N
,,,,,,"[0, 0]",N
,,,,,,error is thrown,N
29,"What gets printed to console.log?

var items = [[0, 0], [""0"", 1], [1, 2], [""1"", 3]];
var mapped = new Map(items);
mapped.forEach((v, k) => mapped.set(k, v+1));
mapped.forEach((v, k) => mapped.set(k, v % 2));
var finalMap = new Map();
mapped.forEach((v, k) => finalMap.set(k, v));
var final;
for (let item of mapped) {
    let [k, v] = item;
    final = [k, v * 10];
};
console.log(final[0], final[1]);",Practical,Advanced,JavaScript,2 Minutes,"[1, 0]",Y
,,,,,,"[1, 2]",N
,,,,,,"[0, 1]",N
,,,,,,error is thrown,N
